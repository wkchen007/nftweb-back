services:
  postgres:
    image: 'postgres:14.5'
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nftweb
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # 管理介面 http://localhost:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      # 持久化資料（包含 mnesia 資料庫等）
      - rabbitmq_data:/var/lib/rabbitmq

  goapp:
    build: .
    container_name: goapp
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - CONFIG_PATH=configs/config.yaml
      - HTTP_ADDR=:8080
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/healthz" ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  rabbitmq_data:
  pgdata:
